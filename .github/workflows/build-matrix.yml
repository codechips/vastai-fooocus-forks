name: Build Fooocus Forks

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - '.github/workflows/build-matrix.yml'
      - 'scripts/check_upstream.py'
      - 'config/forks.yaml'

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: mashb1t
            repo: mashb1t/Fooocus
          - name: ruined
            repo: runew0lf/RuinedFooocus
          - name: extended
            repo: shaitanzx/Fooocus_extend
          - name: mre
            repo: MoonRide303/Fooocus-MRE

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pyyaml requests

      - name: Create build state directory
        run: mkdir -p build/state

      - name: Check for upstream changes
        id: check
        run: |
          echo "Checking upstream changes for ${{ matrix.name }} (${{ matrix.repo }})"
          python scripts/check_upstream.py ${{ matrix.name }} ${{ matrix.repo }}
          BUILD_NEEDED=$?
          echo "Exit code: $BUILD_NEEDED"
          echo "build=$BUILD_NEEDED" >> $GITHUB_OUTPUT

      - name: Debug build decision
        run: |
          echo "Build needed: ${{ steps.check.outputs.build }}"
          echo "Fork: ${{ matrix.name }}"
          echo "Repo: ${{ matrix.repo }}"

      - name: Get latest commit SHA
        if: steps.check.outputs.build == '0'
        id: commit
        run: |
          SHA=$(git ls-remote https://github.com/${{ matrix.repo }} HEAD | cut -f1)
          echo "sha=${SHA}" >> $GITHUB_OUTPUT
          echo "short_sha=${SHA:0:7}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        if: steps.check.outputs.build == '0'
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: steps.check.outputs.build == '0'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        if: steps.check.outputs.build == '0'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/fooocus-${{ matrix.name }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.commit.outputs.sha }}
            type=raw,value=${{ steps.commit.outputs.short_sha }}

      - name: Build and push Docker image
        if: steps.check.outputs.build == '0'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            FORK_REPO=${{ matrix.repo }}
            FORK_COMMIT=${{ steps.commit.outputs.sha }}
            FORK_NAME=${{ matrix.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Update build state
        if: steps.check.outputs.build == '0'
        run: |
          echo "${{ steps.commit.outputs.sha }}" > build/state/${{ matrix.name }}.txt
          
      - name: Commit build state
        if: steps.check.outputs.build == '0' && github.event_name != 'pull_request'
        uses: EndBug/add-and-commit@v9
        with:
          add: 'build/state/${{ matrix.name }}.txt'
          message: 'Update build state for ${{ matrix.name }} [${{ steps.commit.outputs.short_sha }}]'
          default_author: github_actions

  summary:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Build Summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Fork | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| mashb1t | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| ruined | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| extended | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| mre | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY